{
  "tests/test_hf_file_system.py::test_resolve_path[gpt2-None-model-gpt2-main-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2-None-model-gpt2-main-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2-None-model-gpt2-main-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2-dev-model-gpt2-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2-dev-model-gpt2-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2-dev-model-gpt2-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2@dev-None-model-gpt2-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2@dev-None-model-gpt2-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2@dev-None-model-gpt2-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad-None-dataset-squad-main-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad-None-dataset-squad-main-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad-None-dataset-squad-main-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad-dev-dataset-squad-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad-dev-dataset-squad-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad-dev-dataset-squad-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad@dev-None-dataset-squad-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad@dev-None-dataset-squad-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad@dev-None-dataset-squad-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[username/my_model-None-model-username/my_model-main-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[username/my_model-None-model-username/my_model-main-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[username/my_model-None-model-username/my_model-main-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[username/my_model-dev-model-username/my_model-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[username/my_model-dev-model-username/my_model-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[username/my_model-dev-model-username/my_model-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[username/my_model@dev-None-model-username/my_model-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[username/my_model@dev-None-model-username/my_model-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[username/my_model@dev-None-model-username/my_model-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/username/my_dataset-None-dataset-username/my_dataset-main-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/username/my_dataset-None-dataset-username/my_dataset-main-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/username/my_dataset-None-dataset-username/my_dataset-main-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/username/my_dataset-dev-dataset-username/my_dataset-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/username/my_dataset-dev-dataset-username/my_dataset-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/username/my_dataset-dev-dataset-username/my_dataset-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/username/my_dataset@dev-None-dataset-username/my_dataset-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/username/my_dataset@dev-None-dataset-username/my_dataset-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/username/my_dataset@dev-None-dataset-username/my_dataset-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://gpt2-None-model-gpt2-main-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://gpt2-None-model-gpt2-main-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://gpt2-None-model-gpt2-main-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://gpt2-dev-model-gpt2-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://gpt2-dev-model-gpt2-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://gpt2-dev-model-gpt2-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://gpt2@dev-None-model-gpt2-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://gpt2@dev-None-model-gpt2-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://gpt2@dev-None-model-gpt2-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/squad-None-dataset-squad-main-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/squad-None-dataset-squad-main-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/squad-None-dataset-squad-main-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/squad-dev-dataset-squad-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/squad-dev-dataset-squad-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/squad-dev-dataset-squad-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/squad@dev-None-dataset-squad-dev-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/squad@dev-None-dataset-squad-dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/squad@dev-None-dataset-squad-dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad@refs/convert/parquet-None-dataset-squad-refs/convert/parquet-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad@refs/convert/parquet-None-dataset-squad-refs/convert/parquet-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[datasets/squad@refs/convert/parquet-None-dataset-squad-refs/convert/parquet-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/username/my_dataset@refs/convert/parquet-None-dataset-username/my_dataset-refs/convert/parquet-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/username/my_dataset@refs/convert/parquet-None-dataset-username/my_dataset-refs/convert/parquet-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://datasets/username/my_dataset@refs/convert/parquet-None-dataset-username/my_dataset-refs/convert/parquet-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2@refs/pr/2-None-model-gpt2-refs/pr/2-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2@refs/pr/2-None-model-gpt2-refs/pr/2-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2@refs/pr/2-None-model-gpt2-refs/pr/2-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2@refs%2Fpr%2F2-None-model-gpt2-refs/pr/2-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2@refs%2Fpr%2F2-None-model-gpt2-refs/pr/2-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[gpt2@refs%2Fpr%2F2-None-model-gpt2-refs/pr/2-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://username/my_model@refs/pr/10-None-model-username/my_model-refs/pr/10-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://username/my_model@refs/pr/10-None-model-username/my_model-refs/pr/10-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://username/my_model@refs/pr/10-None-model-username/my_model-refs/pr/10-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://username/my_model@refs/pr/10-refs/pr/10-model-username/my_model-refs/pr/10-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://username/my_model@refs/pr/10-refs/pr/10-model-username/my_model-refs/pr/10-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://username/my_model@refs/pr/10-refs/pr/10-model-username/my_model-refs/pr/10-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://username/my_model@refs%2Fpr%2F10-refs/pr/10-model-username/my_model-refs/pr/10-]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://username/my_model@refs%2Fpr%2F10-refs/pr/10-model-username/my_model-refs/pr/10-file.txt]": true,
  "tests/test_hf_file_system.py::test_resolve_path[hf://username/my_model@refs%2Fpr%2F10-refs/pr/10-model-username/my_model-refs/pr/10-path/to/file]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[hf://datasets/squad@dev-None-datasets/squad@dev-]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[hf://datasets/squad@dev-None-datasets/squad@dev-file.txt]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[hf://datasets/squad@dev-None-datasets/squad@dev-path/to/file]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[datasets/squad@refs/convert/parquet-None-datasets/squad@refs/convert/parquet-]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[datasets/squad@refs/convert/parquet-None-datasets/squad@refs/convert/parquet-file.txt]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[datasets/squad@refs/convert/parquet-None-datasets/squad@refs/convert/parquet-path/to/file]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[hf://username/my_model@refs/pr/10-None-username/my_model@refs/pr/10-]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[hf://username/my_model@refs/pr/10-None-username/my_model@refs/pr/10-file.txt]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[hf://username/my_model@refs/pr/10-None-username/my_model@refs/pr/10-path/to/file]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[username/my_model-refs/weirdo-username/my_model@refs%2Fweirdo-]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[username/my_model-refs/weirdo-username/my_model@refs%2Fweirdo-file.txt]": true,
  "tests/test_hf_file_system.py::test_unresolve_path[username/my_model-refs/weirdo-username/my_model@refs%2Fweirdo-path/to/file]": true,
  "tests/test_hf_file_system.py::test_resolve_path_with_refs_revision": true,
  "tests/test_hf_file_system.py::test_resolve_path_with_non_matching_revisions": true,
  "tests/test_hf_file_system.py::test_access_repositories_lists[]": true,
  "tests/test_hf_file_system.py::test_access_repositories_lists[foo]": true,
  "tests/test_hf_file_system.py::test_access_repositories_lists[datasets]": true,
  "tests/test_hf_file_system.py::test_access_repositories_lists[datasets/foo]": true,
  "tests/test_hf_file_system.py::test_exists_after_repo_deletion": true,
  "tests/test_inference_async_client.py::test_async_generate_no_details": true,
  "tests/test_inference_async_client.py::test_async_generate_with_details": true,
  "tests/test_inference_async_client.py::test_async_generate_best_of": true,
  "tests/test_inference_async_client.py::test_async_generate_validation_error": true,
  "tests/test_inference_async_client.py::test_async_generate_non_tgi_endpoint": true,
  "tests/test_inference_async_client.py::test_async_generate_stream_no_details": true,
  "tests/test_inference_async_client.py::test_async_generate_stream_with_details": true,
  "tests/test_inference_async_client.py::test_async_chat_completion_no_stream": true,
  "tests/test_inference_async_client.py::test_async_chat_completion_not_tgi_no_stream": true,
  "tests/test_inference_async_client.py::test_async_chat_completion_with_stream": true,
  "tests/test_inference_async_client.py::test_async_sentence_similarity": true,
  "tests/test_inference_async_client.py::test_sync_vs_async_signatures": true,
  "tests/test_inference_async_client.py::test_get_status_too_big_model": true,
  "tests/test_inference_async_client.py::test_get_status_loaded_model": true,
  "tests/test_inference_async_client.py::test_get_status_unknown_model": true,
  "tests/test_inference_async_client.py::test_get_status_model_as_url": true,
  "tests/test_inference_async_client.py::test_list_deployed_models_single_frameworks": true,
  "tests/test_inference_async_client.py::test_async_generate_timeout_error": true,
  "tests/test_inference_async_client.py::test_close_connection_on_post_error": true,
  "tests/test_inference_async_client.py::test_openai_compatibility_base_url_and_api_key": true,
  "tests/test_inference_async_client.py::test_openai_compatibility_without_base_url": true,
  "tests/test_inference_async_client.py::test_openai_compatibility_with_stream_true": true,
  "tests/test_inference_async_client.py::test_http_session_correctly_closed": true,
  "tests/test_inference_async_client.py::test_use_async_with_inference_client": true,
  "tests/test_inference_async_client.py::test_client_responses_correctly_closed": true,
  "tests/test_inference_async_client.py::test_warns_if_client_deleted_with_opened_sessions": true,
  "tests/test_inference_client.py::test_stream_text_generation_response[data: [DONE]]": true,
  "tests/test_inference_client.py::test_stream_text_generation_response[data: [DONE]\\n]": true,
  "tests/test_inference_client.py::test_stream_text_generation_response[data: [DONE] ]": true,
  "tests/test_inference_client.py::test_stream_chat_completion_response[data: [DONE]]": true,
  "tests/test_inference_client.py::test_stream_chat_completion_response[data: [DONE]\\n]": true,
  "tests/test_inference_client.py::test_stream_chat_completion_response[data: [DONE] ]": true,
  "tests/test_inference_client.py::test_chat_completion_error_in_stream": true,
  "tests/test_inference_client.py::test_resolve_chat_completion_url[https://api-inference.huggingface.co/models/username/repo_name-https://api-inference.huggingface.co/models/username/repo_name/v1/chat/completions]": true,
  "tests/test_inference_client.py::test_resolve_chat_completion_url[https://rur2d6yoccusjxgn.us-east-1.aws.endpoints.huggingface.cloud-https://rur2d6yoccusjxgn.us-east-1.aws.endpoints.huggingface.cloud/v1/chat/completions]": true,
  "tests/test_inference_client.py::test_resolve_chat_completion_url[https://rur2d6yoccusjxgn.us-east-1.aws.endpoints.huggingface.cloud/v1/chat/completions-https://rur2d6yoccusjxgn.us-east-1.aws.endpoints.huggingface.cloud/v1/chat/completions]": true,
  "tests/test_inference_client.py::test_resolve_chat_completion_url[https://rur2d6yoccusjxgn.us-east-1.aws.endpoints.huggingface.cloud/v1-https://rur2d6yoccusjxgn.us-east-1.aws.endpoints.huggingface.cloud/v1/chat/completions]": true,
  "tests/test_inference_client.py::test_resolve_chat_completion_url[https://rur2d6yoccusjxgn.us-east-1.aws.endpoints.huggingface.cloud/v1/-https://rur2d6yoccusjxgn.us-east-1.aws.endpoints.huggingface.cloud/v1/chat/completions]": true,
  "tests/test_inference_client.py::test_resolve_chat_completion_url[http://0.0.0.0:8080/v1-http://0.0.0.0:8080/v1/chat/completions]": true,
  "tests/test_inference_client.py::test_pass_url_as_base_url": true,
  "tests/test_webhooks_server.py::test_deserialize_payload_example_with_comment": true,
  "tests/test_webhooks_server.py::test_deserialize_payload_example_without_comment": true,
  "tests/test_webhooks_server.py::test_deserialize_payload_example_with_updated_refs": true,
  "tests/test_dduf.py::TestDDUFEntry": true,
  "tests/test_dduf.py::TestUtils": true,
  "tests/test_dduf.py::TestExportFolder": true,
  "tests/test_dduf.py::TestExportEntries": true,
  "tests/test_dduf.py::TestReadDDUFFile": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_append_file": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_copy_file": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_file_type": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_find_data_file_no_revision": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_find_root_directory_no_revision": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_find_root_directory_no_revision_with_incomplete_cache": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_get_file_on_folder": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_get_file_with_kwargs": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_get_file_with_temporary_file": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_get_file_with_temporary_folder": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_glob": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_info": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_initialize_from_fsspec": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_list_data_directory_no_revision": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_list_data_directory_with_revision": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_list_data_file_no_revision": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_list_root_directory_no_revision": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_list_root_directory_no_revision_no_detail_then_with_detail": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_modified_time": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_open_and_read": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_open_if_not_found": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_partial_read": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_read_bytes": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_read_file": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_read_file_with_revision": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_read_text": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_remove_directory": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_remove_file": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_stream_file": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_stream_file_retry": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_url": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_write_file": true,
  "tests/test_hf_file_system.py::HfFileSystemTests::test_write_file_multiple_chunks": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_autocomplete_works_as_expected": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_from_cls_with_custom_type": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_from_pretrained_from_absolute_path": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_from_pretrained_from_absolute_string_path": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_from_pretrained_from_relative_path": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_from_pretrained_model_id_and_revision": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_from_pretrained_model_id_only": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_from_pretrained_when_cls_is_a_dataclass": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_get_type_hints_works_as_expected": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_inherited_class": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_init_accepts_kwargs_no_config": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_init_accepts_kwargs_save_and_load": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_init_accepts_kwargs_with_config": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_push_to_hub": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_save_pretrained_as_dataclass_basic": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_save_pretrained_as_dict_basic": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_save_pretrained_do_not_overwrite_new_config": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_save_pretrained_does_overwrite_legacy_config": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_save_pretrained_no_config": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_save_pretrained_optional_dataclass": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_save_pretrained_optional_dict": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_save_pretrained_with_dataclass_config": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_save_pretrained_with_dict_config": true,
  "tests/test_hub_mixin.py::HubMixinTest::test_save_pretrained_with_push_to_hub": true,
  "tests/test_inference_api.py::InferenceApiTest::test_inference_missing_input": true,
  "tests/test_inference_api.py::InferenceApiTest::test_inference_overriding_invalid_task": true,
  "tests/test_inference_api.py::InferenceApiTest::test_inference_overriding_task": true,
  "tests/test_inference_api.py::InferenceApiTest::test_inference_with_audio": true,
  "tests/test_inference_api.py::InferenceApiTest::test_inference_with_dict_inputs": true,
  "tests/test_inference_api.py::InferenceApiTest::test_inference_with_image": true,
  "tests/test_inference_api.py::InferenceApiTest::test_inference_with_params": true,
  "tests/test_inference_api.py::InferenceApiTest::test_simple_inference": true,
  "tests/test_inference_api.py::InferenceApiTest::test_text_to_image": true,
  "tests/test_inference_api.py::InferenceApiTest::test_text_to_image_raw_response": true,
  "tests/test_inference_client.py::TestInferenceClient::test_audio_classification[hf-inference,audio-classification]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_audio_to_audio[hf-inference,audio-to-audio]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_automatic_speech_recognition[fal-ai,automatic-speech-recognition]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_automatic_speech_recognition[hf-inference,automatic-speech-recognition]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_no_stream[cerebras,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_no_stream[together,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_no_stream[fireworks-ai,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_no_stream[hf-inference,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_no_stream[hyperbolic,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_no_stream[nebius,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_no_stream[novita,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_no_stream[sambanova,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_stream[cerebras,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_stream[together,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_stream[fireworks-ai,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_stream[hf-inference,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_stream[hyperbolic,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_stream[nebius,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_stream[novita,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_stream[sambanova,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_non_tgi": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_tool[cerebras,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_tool[together,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_tool[fireworks-ai,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_tool[hf-inference,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_tool[hyperbolic,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_tool[nebius,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_tool[novita,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_tool[sambanova,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_response_format[cerebras,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_response_format[together,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_response_format[fireworks-ai,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_response_format[hf-inference,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_response_format[hyperbolic,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_response_format[nebius,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_response_format[novita,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_with_response_format[sambanova,conversational]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_chat_completion_unprocessable_entity": true,
  "tests/test_inference_client.py::TestInferenceClient::test_document_question_answering[hf-inference,document-question-answering]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_feature_extraction_with_transformers[hf-inference,feature-extraction]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_feature_extraction_with_sentence_transformers[hf-inference,feature-extraction]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_fill_mask[client0]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_hf_inference_get_recommended_model_has_recommendation": true,
  "tests/test_inference_client.py::TestInferenceClient::test_hf_inference_get_recommended_model_no_recommendation": true,
  "tests/test_inference_client.py::TestInferenceClient::test_image_classification[hf-inference,image-classification]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_image_segmentation[hf-inference,image-segmentation]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_image_to_text[hf-inference,image-to-text]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_object_detection[hf-inference,object-detection]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_question_answering[client0]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_sentence_similarity[hf-inference,sentence-similarity]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_summarization[hf-inference,summarization]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_tabular_classification[hf-inference,tabular-classification]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_tabular_regression[hf-inference,tabular-regression]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_table_question_answering[hf-inference,table-question-answering]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_classification[hf-inference,text-classification]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_generation": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_default[black-forest-labs,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_default[together,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_default[fal-ai,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_default[hf-inference,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_default[hyperbolic,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_default[nebius,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_default[replicate,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_with_parameters[black-forest-labs,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_with_parameters[together,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_with_parameters[fal-ai,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_with_parameters[hf-inference,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_with_parameters[hyperbolic,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_with_parameters[nebius,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_image_with_parameters[replicate,text-to-image]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_text_to_speech[hf-inference,text-to-speech]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_translation[hf-inference,translation]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_translation_with_source_and_target_language[hf-inference,translation]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_token_classification[hf-inference,token-classification]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_visual_question_answering[hf-inference,visual-question-answering]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_zero_shot_classification_single_label[hf-inference,zero-shot-classification]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_zero_shot_classification_multi_label[hf-inference,zero-shot-classification]": true,
  "tests/test_inference_client.py::TestInferenceClient::test_zero_shot_image_classification[hf-inference,zero-shot-image-classification]": true,
  "tests/test_inference_client.py::TestOpenAsBinary::test_open_as_binary_with_none": true,
  "tests/test_inference_client.py::TestOpenAsBinary::test_open_as_binary_from_str_path": true,
  "tests/test_inference_client.py::TestOpenAsBinary::test_open_as_binary_from_pathlib_path": true,
  "tests/test_inference_client.py::TestOpenAsBinary::test_open_as_binary_from_url": true,
  "tests/test_inference_client.py::TestOpenAsBinary::test_open_as_binary_opened_file": true,
  "tests/test_inference_client.py::TestOpenAsBinary::test_open_as_binary_from_bytes": true,
  "tests/test_inference_client.py::TestHeadersAndCookies::test_headers_and_cookies": true,
  "tests/test_inference_client.py::TestHeadersAndCookies::test_mocked_post": true,
  "tests/test_inference_client.py::TestHeadersAndCookies::test_accept_header_image": true,
  "tests/test_inference_client.py::TestModelStatus::test_too_big_model": true,
  "tests/test_inference_client.py::TestModelStatus::test_loaded_model": true,
  "tests/test_inference_client.py::TestModelStatus::test_unknown_model": true,
  "tests/test_inference_client.py::TestModelStatus::test_model_as_url": true,
  "tests/test_inference_client.py::TestListDeployedModels::test_list_deployed_models_main_frameworks_mock": true,
  "tests/test_inference_client.py::TestListDeployedModels::test_list_deployed_models_all_frameworks_mock": true,
  "tests/test_inference_client.py::TestListDeployedModels::test_list_deployed_models_single_frameworks": true,
  "tests/test_inference_client.py::TestOpenAICompatibility::test_base_url_and_api_key": true,
  "tests/test_inference_client.py::TestOpenAICompatibility::test_without_base_url": true,
  "tests/test_inference_client.py::TestOpenAICompatibility::test_with_stream_true": true,
  "tests/test_inference_client.py::TestOpenAICompatibility::test_token_and_api_key_mutually_exclusive": true,
  "tests/test_inference_client.py::TestOpenAICompatibility::test_model_and_base_url_mutually_exclusive": true,
  "tests/test_init_lazy_loading.py::TestHuggingfaceHubInit::test_autocomplete_on_root_imports": true,
  "tests/test_serialization.py::test_single_shard": true,
  "tests/test_serialization.py::test_multiple_shards": true,
  "tests/test_serialization.py::test_tensor_same_storage": true,
  "tests/test_serialization.py::test_get_tf_storage_size": true,
  "tests/test_serialization.py::test_get_torch_storage_size": true,
  "tests/test_serialization.py::test_get_torch_storage_size_wrapper_tensor_subclass": true,
  "tests/test_serialization.py::test_parse_size_to_int": true,
  "tests/test_serialization.py::test_save_torch_model": true,
  "tests/test_serialization.py::test_save_torch_state_dict_not_sharded": true,
  "tests/test_serialization.py::test_save_torch_state_dict_sharded": true,
  "tests/test_serialization.py::test_save_torch_state_dict_unsafe_not_sharded": true,
  "tests/test_serialization.py::test_save_torch_state_dict_tensor_subclass_unsafe_not_sharded": true,
  "tests/test_serialization.py::test_save_torch_state_dict_shared_layers_tensor_subclass_unsafe_not_sharded": true,
  "tests/test_serialization.py::test_save_torch_state_dict_unsafe_sharded": true,
  "tests/test_serialization.py::test_save_torch_state_dict_shared_layers_not_sharded": true,
  "tests/test_serialization.py::test_save_torch_state_dict_shared_layers_sharded": true,
  "tests/test_serialization.py::test_save_torch_state_dict_discard_selected_sharded": true,
  "tests/test_serialization.py::test_save_torch_state_dict_discard_selected_not_sharded": true,
  "tests/test_serialization.py::test_split_torch_state_dict_into_shards": true,
  "tests/test_serialization.py::test_save_torch_state_dict_custom_filename": true,
  "tests/test_serialization.py::test_save_torch_state_dict_delete_existing_files": true,
  "tests/test_serialization.py::test_save_torch_state_dict_not_main_process": true,
  "tests/test_serialization.py::test_load_state_dict_from_file": true,
  "tests/test_serialization.py::test_load_sharded_state_dict": true,
  "tests/test_serialization.py::test_load_from_directory_not_sharded": true,
  "tests/test_serialization.py::test_load_state_dict_missing_file[True]": true,
  "tests/test_serialization.py::test_load_state_dict_missing_file[False]": true,
  "tests/test_serialization.py::test_load_torch_model_directory_does_not_exist": true,
  "tests/test_serialization.py::test_load_torch_model_directory_does_not_contain_checkpoint": true,
  "tests/test_serialization.py::test_load_sharded_model_strict_mode[True]": true,
  "tests/test_serialization.py::test_load_sharded_model_strict_mode[False]": true,
  "tests/test_serialization.py::test_load_torch_model_with_filename_pattern": true,
  "tests/test_serialization.py::test_load_torch_model_index_selection[None-True-files_exist0-model{suffix}.safetensors]": true,
  "tests/test_serialization.py::test_load_torch_model_index_selection[None-False-files_exist1-pytorch_model{suffix}.bin]": true,
  "tests/test_serialization.py::test_load_torch_model_index_selection[None-False-files_exist2-model{suffix}.safetensors]": true,
  "tests/test_serialization.py::test_load_torch_model_index_selection[model.variant{suffix}.safetensors-False-files_exist3-model.variant{suffix}.safetensors]": true,
  "tests/test_serialization.py::test_load_torch_model_index_selection[model.variant{suffix}.bin-False-files_exist4-model.variant{suffix}.bin]": true,
  "tests/test_serialization.py::test_load_torch_model_index_selection[model.variant{suffix}.bin-True-files_exist5-model.variant{suffix}.bin]": true,
  "tests/test_webhooks_server.py::TestWebhooksServerDontRun::test_add_webhook_explicit_path": true,
  "tests/test_webhooks_server.py::TestWebhooksServerDontRun::test_add_webhook_implicit_path": true,
  "tests/test_webhooks_server.py::TestWebhooksServerDontRun::test_add_webhook_twice_should_fail": true,
  "tests/test_webhooks_server.py::TestWebhooksServerRun::test_no_webhook_secret_should_be_unauthorized": true,
  "tests/test_webhooks_server.py::TestWebhooksServerRun::test_route_with_explicit_path": true,
  "tests/test_webhooks_server.py::TestWebhooksServerRun::test_run_parse_payload": true,
  "tests/test_webhooks_server.py::TestWebhooksServerRun::test_run_print_instructions": true,
  "tests/test_webhooks_server.py::TestWebhooksServerRun::test_with_webhook_secret_should_succeed": true,
  "tests/test_webhooks_server.py::TestWebhooksServerRun::test_wrong_webhook_secret_should_be_forbidden": true,
  "tests/test_command_delete_cache.py::TestDeleteCacheHelpers": true,
  "tests/test_command_delete_cache.py::TestMockedDeleteCacheCommand": true
}